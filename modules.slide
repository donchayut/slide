Go Modules

* Modules
- A collection of related Go packages that are versioned together as a single unit

Modules record precise dependency requirements and create reproducible builds.

Most often, a version control repository contains exactly one module defined in the repository root. (Multiple modules are supported in a single repository, but typically that would result in more work on an on-going basis than a single module per repository).

* Repositories, Modules, and Packages:
- A repository contains one or more Go modules.
- Each module contains one or more Go packages.
- Each package consists of one or more Go source files in a single directory.
- Modules *must* *be* semantically versioned v(major).(minor).(patch)
- such as v0.1.0 or v1.2.3. The leading *v* *is* *required*.
If using Git, tag released commits with their versions.
Public and private module repositories and proxies are becoming available (see FAQ below).

* Go inside GOPATH
- export GO111MODULE=on
- go mod init
- go mode tidy

* Update dependency
- upgrade
- downgrade

* Replace dependency
- go mod edit -replace github.com/AnuchitO/say=./say

* Multiple version
- say v1
- say v2

* Module compatibility and semantic versioning
- https://research.swtch.com/vgo-module